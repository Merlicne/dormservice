# This file is a template, and might need editing before it works on your project.
# jdk 17
# deploy to google cloud artifact registry
# then deploy to google compute engine with terraform

image: maven:3.9.9-ibm-semeru-17-focal

services:
  - docker:24.0.5-dind

variables:  
  DOCKER_HOST: tcp://docker:2375/  # Connect to the Docker daemon running in the service
  DOCKER_TLS_CERTDIR: ""
  SERVICE_NAME: "dorm-service"
  GCP_REGION: "asia-southeast1"
  GCP_ZONE: "asia-southeast1-a"
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_PROJECT_NAME}
  TF_HTTP_USERNAME: gitlab-ci-token
  TF_HTTP_PASSWORD: ${CI_JOB_TOKEN}

stages:
  - build
  - test
  - push_image
  - deploy

cache:
  paths:
    - .m2/repository/
    - target/

build:
  stage: build
    
  script:
    - mvn clean package
    
test:
  stage: test
  script:
    - mvn test

push_image:
  stage: push_image
  image: google/cloud-sdk:slim
  services:
    - docker:19.03.12-dind
  script:
      - IMAGE_NAME="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/services/$SERVICE_NAME:$CI_COMMIT_SHORT_SHA"
      - echo "$GCP_SERVICE_ACCOUNT_KEY" | docker login -u _json_key --password-stdin "https://${GCP_REGION}-docker.pkg.dev"
      - docker build -t $IMAGE_NAME .
      - docker push $IMAGE_NAME
  only:
    - master
    - main

deploy:
  stage: deploy
  image:
    name: hashicorp/terraform:latest
    entrypoint: [""]

  before_script:
    - apk add --no-cache curl python3 py3-crcmod bash libc6-compat
    - curl https://sdk.cloud.google.com > install.sh
    - bash install.sh --disable-prompts
    - export PATH=$PATH:/root/google-cloud-sdk/bin
    - echo "$GCP_SERVICE_ACCOUNT_KEY" > gcp-key.json
    - gcloud auth activate-service-account --key-file=gcp-key.json
    - gcloud config set project $GCP_PROJECT_ID
    - export GOOGLE_APPLICATION_CREDENTIALS="$PWD/gcp-key.json"
  script:
    - terraform init
      -backend-config="address=${TF_ADDRESS}"
      -backend-config="lock_address=${TF_ADDRESS}/lock"
      -backend-config="unlock_address=${TF_ADDRESS}/lock"
      -backend-config="username=${TF_HTTP_USERNAME}"
      -backend-config="password=${TF_HTTP_PASSWORD}"
      -backend-config="lock_method=POST"
      -backend-config="unlock_method=DELETE"
      -backend-config="retry_wait_min=5"
    - IMAGE_NAME="${GCP_REGION}-docker.pkg.dev/$GCP_PROJECT_ID/services/$SERVICE_NAME:$CI_COMMIT_SHORT_SHA"
    - terraform destroy
      -var "region=$GCP_REGION"   
      -var "zone=$GCP_ZONE" 
      -var "service_name=$SERVICE_NAME" 
      -var "IMAGE_NAME=$IMAGE_NAME" 
      -var "project_id=$GCP_PROJECT_ID" 
      -var "gitlab_registry_username=$CI_REGISTRY_USER"
      -var "gitlab_registry_token=$CI_REGISTRY_PASSWORD"
      -var "DATABASE_URL=$DB_URL"
      -var "DATABASE_USERNAME=$DB_USERNAME"
      -var "DATABASE_PASSWORD=$DB_PASSWORD"
      -var "DATABASE_NAME=$DB_DATABASE"
      -var "EUREKA_URL=$EUREKA_ENDPOINT"
      -var "JWT_SECRET=$JWT_KEY"
      -var "JWT_EXPIRATION_TIME=$JWT_EXPIRATION_TIME"
    - terraform plan 
      -var "region=$GCP_REGION"   
      -var "zone=$GCP_ZONE" 
      -var "service_name=$SERVICE_NAME" 
      -var "IMAGE_NAME=$IMAGE_NAME" 
      -var "project_id=$GCP_PROJECT_ID" 
      -var "gitlab_registry_username=$CI_REGISTRY_USER"
      -var "gitlab_registry_token=$CI_REGISTRY_PASSWORD"
      -var "DATABASE_URL=$DB_URL"
      -var "DATABASE_USERNAME=$DB_USERNAME"
      -var "DATABASE_PASSWORD=$DB_PASSWORD"
      -var "DATABASE_NAME=$DB_DATABASE"
      -var "EUREKA_URL=$EUREKA_ENDPOINT"
      -var "JWT_SECRET=$JWT_KEY"
      -var "JWT_EXPIRATION_TIME=$JWT_EXPIRATION_TIME"
    - terraform apply -auto-approve 
      -var "region=$GCP_REGION" 
      -var "zone=$GCP_ZONE" 
      -var "service_name=$SERVICE_NAME" 
      -var "IMAGE_NAME=$IMAGE_NAME" 
      -var "project_id=$GCP_PROJECT_ID"
      -var "gitlab_registry_username=$CI_REGISTRY_USER"
      -var "gitlab_registry_token=$CI_REGISTRY_PASSWORD"
      -var "DATABASE_URL=$DB_URL"
      -var "DATABASE_USERNAME=$DB_USERNAME"
      -var "DATABASE_PASSWORD=$DB_PASSWORD"
      -var "DATABASE_NAME=$DB_DATABASE"
      -var "EUREKA_URL=$EUREKA_ENDPOINT"
      -var "JWT_SECRET=$JWT_KEY"
      -var "JWT_EXPIRATION_TIME=$JWT_EXPIRATION_TIME"
  only:
    - master
    - main

